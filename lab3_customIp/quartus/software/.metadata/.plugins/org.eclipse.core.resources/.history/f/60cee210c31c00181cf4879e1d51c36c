#include "system.h"
typedef enum {false, true} bool;

//typedef enum {false, true} bool;
	unsigned long *ledPtr= (unsigned long *) PIO_0_BASE;
	unsigned long *keyptr = (unsigned long *) PIO_1_BASE;
	//unsigned short *ledsBase_ptr = (unsigned short *) LEDS_BASE;
	unsigned long *addr = (unsigned long *) 0;
	/* unsigned long *addr1;
	unsigned long *addr2;
	unsigned long *addr3; */
	unsigned long ledVal;
	unsigned long keyVal;
	unsigned short count = 0;

void main()
{
	while (1){
		keyVal = *keyptr;
		;
		while((keyVal) == 0){
			keyVal = *keyptr;
		}
		while((keyVal) == 1){
			while (count < 1){
				ledVal = 0;
				writeData(4);
				if (ramConfidenceTest(addr, 4) == 1){
					ledVal = 11111111;
				}
				else{
					ledVal = 0;
				//}
					count++;
					}
			ledPtr = ledVal;
			count = 0;
			}

		}
	}
}

int ramConfidenceTest(unsigned long *ptr, int numBytesToCheck){
 //for loop that iterates though addresses and checks them (num bytes = the amount of bytes being checked)
	int i = numBytesToCheck;
	int c = 0;
	while(i > 0){
		if (*ptr == c){
			c++;
			i--;
			ptr++;
			continue;
		}
		else{
			return 0;
		}
	}
	return 1;
}

void writeData(int times){
	int i = 0;
	while (times > i){
		*addr = i;
		i++;
		addr++;
		//times--;
	}
}
